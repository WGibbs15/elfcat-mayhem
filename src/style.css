html {
  font-family: monospace;
}
#headertable {
  width: 100%;
}
#rightmenu {
  vertical-align: top;
  text-align: right;
  float: right;
}
#credits {
  color: #ddd;
  text-decoration: none;
  margin-bottom: 0.5em;
  display: block;
}
#credits:hover {
  color: #000;
}
#arrow_opacity_range {
  width: 8em;
}
.right_hidden {
  text-align: left;
  display: none;
}
.textbutton {
  color: #222;
  cursor: pointer;
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  margin-bottom: 0.5em;
}
.textbutton::before {
  content: "[";
}
.textbutton::after {
  content: "]";
}
.textbutton:hover {
  color: #922;
}
.textbutton:active {
  color: #d11;
}
.textbutton:hover::before {
  color: #222;
}
.textbutton:hover::after {
  color: #222;
}
label, input {
  vertical-align: middle;
}
.legend_rect {
  float: left;
  margin-right: 0.4em;
  width: 3em;
  height: 1.5em;
  border: 1px solid rgba(0, 0, 0, .2);
}
ul {
  list-style: none;
  padding: 0em;
}
#help > p {
  margin-top: 0em;
  margin-bottom: 0.5em;
  width: 29em;
}
#help > ul {
  margin-top: 0em;
}
#help > p + p {
  margin-top: 1em;
}
li {
  clear: left;
  height: 2em;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.number {
  text-decoration: underline dotted #888;
}
#desc {
  width: 250px;
}
#struct_infotables {
  padding-right: 0px;
}
#data_infotables {
  padding-left: 0px;
}
.conceal {
  display: none;
  border: 1px solid #000;
  max-width: 600px;
}
#offsets {
  display: inline-block;
  text-align: right;
}
#bytes {
  border: 1px solid;
  display: inline-block;
  word-break: break-word;
  /* 16 bytes * (2 chars per byte + 1 space) - 1 final space + 1 due to a bug in chrome, where if
   * you set width to X ch and put X characters, it may or may not wrap. */
  width: 48ch;
}
#ascii {
  border: 1px solid;
  display: inline-block;
  width: 16ch;
}
#vmap {
  border: 1px solid;
  display: inline-block;
  width: 47ch;
  vertical-align: top;
  position: sticky;
  top: 8px;
}
#sticky_table {
  display: inline-block;
  vertical-align: top;
  position: sticky;
  top: 8px;
}
#sticky_table > * {
  vertical-align: top;
}
.hover:hover {
  background-color: #ee9;
}

.ident {
  background-color: #e99;
}
/* highlight children */
.ident:hover > * {
  background-color: #ebb;
}
/* duplicate of .hover:hover with more specifity.
 * used for elements like #magic, for whom
 * rule .ident:hover > * would override .hover:hover rule */
.ident:hover > *.hover:hover {
  background-color: #ee9;
}

/* same for .ehdr, but we also don't want to highlight .ident */
.ehdr {
  background-color: #99e;
}
.ehdr:hover > *:not(.ident) {
  background-color: #bbe;
}
.ehdr:hover > *.hover:hover:not(.ident) {
  background-color: #ee9;
}

.phdr {
  background-color: #eb9;
}
.phdr:hover > * {
  background-color: #ed9;
}
.phdr_hover:hover {
  background-color: #ef9;
}

.shdr {
  background-color: #9be;
}
.shdr:hover > * {
  background-color: #9de;
}
.shdr_hover:hover {
  background-color: #9fe;
}

.segment {
  background-color: #f99;
}
.section {
  background-color: #f9f;
}
/* there are only sections inside segments due to code */
.segment > .section, .segm_sect_legend {
  background: repeating-linear-gradient(
    -45deg,
    #f99,
    #f99 10px,
    #f9f 10px,
    #f9f 20px
  );
}
/* another duplicate of .hover:hover with more specifity */
.segment > .section.hover:hover {
  background: initial;
  background-color: #ee9;
}

.segment > .segment_subrange.hover:hover {
  background: initial;
  background-color: #f59;
}

svg {
  position: absolute;
  left: 0px;
  right: 0px;
  pointer-events: none;
  overflow: visible;
}
